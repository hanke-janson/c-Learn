// 每个文件都应显式#include它需要编译的所有头文件, 不要依赖从其他标头传递包含的标头
// 为了最大限度地提高编译器标记缺少的包含项的可能性，请按如下方式对#includes进行排序：
// 1.配对的头文件
// 2.项目中的其他标头
// 3.第三方库标头
// 4.标准库标头
// 这样，如果某个定义的标头缺少第三方库或标准库标头的#include，则更有可能导致编译错误，以便可以进行修复

int add(int x, int y); //向前声明

// 一些建议
// 1.始终使用标题护罩
// 2.不要在头文件中定义变量和函数（全局常量是一个例外）
// 3.为头文件指定与其关联的源文件相同的名称（例如，grades.h 与 grades.cpp 配对）
// 4.每个头文件都应具有特定的作业，并尽可能独立
// 例如，可以将与功能 A 相关的所有声明放在 A.h 中，将与功能 B 相关的所有声明放在 B.h 中
// 这样，如果以后只关心A，你可以只包括A.h，而得不到任何与B相关的东西
// 5.请注意需要为代码文件中使用的功能显式包含哪些标头
// 6.你写的每个头都应该自己编译（它应该#include它需要的每个依赖项）
// 7.只#include你需要的东西（不要仅仅因为可以就包括所有内容）
// 8.不要#include.cpp文件
